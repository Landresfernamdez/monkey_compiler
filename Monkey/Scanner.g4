lexer grammar Scanner;
//Expresiones regulares
//Simbolos

LET:'let';
RETURN:'return';
ID: LETTER(LETTER|DIGIT)*;
EQUAL:'=';
PCOMA:';';
L:'<';
P:'>';
LE:'<=';
PE:'>=';
EE:'==';
SUM:'+';
SUB:'-';
MUL:'*';
DIV:'/';
PCI:'[';
PCD:']';
PRI:'(';
PRD:')';
INTEGER:'Integer';
STRING:'String';
TRUE:'true';
FALSE:'false';
LEN:'len';
FIRST:'first';
LAST:'last';
REST:'rest';
PUSH:'push';
FN:'fn';
COMA:',';
LI:'{';
LD:'}';
DPTS:':';
PUTS:'puts';
IF:'if';
ELSE:'else';
SPACE:' ';
NUM:DIGIT DIGIT*;
OPERA:OPERATOR;
fragment LETTER :'a'..'z' | 'A'..'Z';
fragment DIGIT :'0'..'9';
fragment OPERATOR: '+'|'-'|'*'|'/';
WS:[ \t\n\r]+-> skip;
LINE_COMMENT:   '//'.*?'\r'?'\n' -> skip ;
SPECIAL_COMMENT: '/*'( SPECIAL_COMMENT | . )*?'*/' -> skip;
